name: Release

on:
  push:
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Create release
        run: gh release create "${GITHUB_REF#refs/tags/}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: create_release
    strategy:
      matrix:
        include:
          - os: macos-latest
            bin: talenta
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            bin: talenta
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            bin: talenta.exe
            target: i686-pc-windows-msvc
          - os: windows-latest
            bin: talenta.exe
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        shell: bash
      - if: matrix.os == 'macos-latest'
        run: |
          brew install gnu-tar
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH
      - name: Add a target to a Rust toolchain
        run: rustup target add ${{ matrix.target }}
      - uses: actions/checkout@v3.3.0
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ matrix.target }}-cargo-
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Archive
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.bin }} .
          tar czf talenta-${VERSION}-${{ matrix.target }}.tar.gz ${{ matrix.bin }} LICENSE-APACHE LICENSE-MIT README.md
        shell: bash
      - name: Upload Release Asset
        run: gh release upload ${VERSION} talenta-${VERSION}-${{ matrix.target }}.tar.gz
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
