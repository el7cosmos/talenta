name: Release

on:
  push:
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    needs: create_release
    strategy:
      matrix:
        include:
          - os: macos-latest
            bin: talenta
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            bin: talenta
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            bin: talenta.exe
            target: i686-pc-windows-msvc
          - os: windows-latest
            bin: talenta.exe
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - id: version
        shell: bash
        run: echo "::set-output name=version::${GITHUB_REF/refs\/tags\//}"
      - if: matrix.os == 'macos-latest'
        run: |
          brew install gnu-tar
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH
      - name: Add a target to a Rust toolchain
        run: rustup target add ${{ matrix.target }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ matrix.target }}-cargo-
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Archive
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.bin }} .
          tar czf talenta.tar.gz ${{ matrix.bin }} LICENSE-APACHE LICENSE-MIT README.md
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./talenta.tar.gz
          asset_name: talenta-${{ steps.version.outputs.version }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip
