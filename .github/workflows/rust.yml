name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}

    steps:
    - name: Add a target to a Rust toolchain
      run: rustup target add ${{ matrix.target }}
    - if: matrix.os == 'macos-latest'
      run: |
        brew install gnu-tar
        echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: Build
      run: cargo build --target ${{ matrix.target }}
    - name: Run tests
      run: cargo test --target ${{ matrix.target }}
